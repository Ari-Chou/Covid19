{"version":3,"sources":["util.js","components/infoBox.js","components/map.js","components/table.js","components/lineGraph.js","App.js","index.js"],"names":["casesTypeColors","cases","hex","rgb","half_op","multiplier","recovered","deaths","formatStat","stat","numeral","format","showDataOnMap","data","casesType","map","countryData","Circle","center","countryInfo","lat","long","fillOpacity","pathOptions","color","fillColor","radius","Math","sqrt","Popup","className","style","backgroundImage","flag","country","InfoBox","title","total","active","isRed","props","Card","onClick","CardContent","Typography","Map","zoom","countriesData","ChangeView","useMap","setView","console","log","MapContainer","scrollWheelZoom","TileLayer","attribution","url","Table","countries","options","legend","display","elements","point","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","value","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","useState","setData","useEffect","axios","get","then","res","chartData","lastData","date","newDataPoint","x","y","push","buildChartData","length","datasets","toUpperCase","fill","lineTension","backgroundColor","borderColor","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","pointBorderColor","pointBackgroundColor","pointBorderWidth","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","App","setCountries","setCountry","setCountryInfo","tableData","setTableData","mapCenter","setMapCenter","mapZoom","setMapZoom","mapCountriesData","setMapCountriesData","setCasesType","name","iso3","sortedData","sort","a","b","sortData","FormControl","Select","variant","onChange","e","selectedCountry","target","MenuItem","todayCases","todayRecovered","todayDeaths","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.ec4b4fd4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./util.css\";\r\nimport { Circle, Popup } from \"react-leaflet\";\r\nimport numeral from \"numeral\";\r\n\r\nconst casesTypeColors = {\r\n  cases: {\r\n    hex: \"#CC1034\",\r\n    rgb: \"rgb(204, 16, 52)\",\r\n    half_op: \"rgba(204, 16, 52, 0.5)\",\r\n    multiplier: 800,\r\n  },\r\n  recovered: {\r\n    hex: \"#7dd71d\",\r\n    rgb: \"rgb(125, 215, 29)\",\r\n    half_op: \"rgba(125, 215, 29, 0.5)\",\r\n    multiplier: 1200,\r\n  },\r\n  deaths: {\r\n    hex: \"#fb4443\",\r\n    rgb: \"rgb(251, 68, 67)\",\r\n    half_op: \"rgba(251, 68, 67, 0.5)\",\r\n    multiplier: 2000,\r\n  },\r\n};\r\n\r\nexport const sortData = (data) => {\r\n  const sortedData = [...data];\r\n\r\n  sortedData.sort((a, b) => {\r\n    if (a.cases > b.cases) {\r\n      return -1;\r\n    } else {\r\n      return 1;\r\n    }\r\n  });\r\n  return sortedData;\r\n};\r\n\r\nexport const formatStat = (stat) => {\r\n  return stat ? `+${numeral(stat).format(\"0.0a\")}` : \"+0\";\r\n};\r\n\r\nexport const showDataOnMap = (data, casesType) =>\r\n  data.map((countryData) => {\r\n    return (\r\n      <Circle\r\n        center={[countryData.countryInfo.lat, countryData.countryInfo.long]}\r\n        fillOpacity={0.4}\r\n        pathOptions={{\r\n          color: casesTypeColors[casesType].hex,\r\n          fillColor: casesTypeColors[casesType].hex,\r\n        }}\r\n        radius={\r\n          Math.sqrt(countryData[casesType] / 10) *\r\n          casesTypeColors[casesType].multiplier\r\n        }\r\n      >\r\n        <Popup>\r\n          <div className=\"info-container\">\r\n            <div\r\n              className=\"info-flag\"\r\n              style={{\r\n                backgroundImage: `url(${countryData.countryInfo.flag})`,\r\n              }}\r\n            />\r\n            <div className=\"info-name\">{countryData.country}</div>\r\n            <div className=\"info-confirmed\">\r\n              Cases: {numeral(countryData.cases).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"info-recovered\">\r\n              Recovered: {numeral(countryData.recovered).format(\"0,0\")}\r\n            </div>\r\n            <div className=\"info-deaths\">\r\n              Deaths: {numeral(countryData.deaths).format(\"0,0\")}\r\n            </div>\r\n          </div>\r\n        </Popup>\r\n      </Circle>\r\n    );\r\n  });\r\n","import React from \"react\";\r\nimport \"./infoBox.css\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nexport const InfoBox = ({ title, cases, total, active, isRed, ...props }) => {\r\n  return (\r\n    <Card\r\n      className={`infoBox ${active && \"is--selected\"} ${\r\n        isRed && \"infoBox--red\"\r\n      } `}\r\n      onClick={props.onClick}\r\n    >\r\n      <CardContent>\r\n        <Typography className=\"info__title\" color=\"textSecondary\">\r\n          {title}\r\n        </Typography>\r\n        <h2 className=\"info__cases\">{cases}</h2>\r\n        <Typography className=\"info__total\" color=\"textSecondary\">\r\n          {total}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { MapContainer, TileLayer, useMap } from \"react-leaflet\";\r\nimport \"./map.css\";\r\nimport { showDataOnMap } from \"../util\";\r\n\r\nexport const Map = ({ center, zoom, countriesData, casesType }) => {\r\n  console.log(\"apple\", center);\r\n\r\n  function ChangeView({ center, zoom }) {\r\n    const map = useMap();\r\n    map.setView(center, zoom);\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"map\">\r\n      <MapContainer\r\n        center={center}\r\n        zoom={zoom}\r\n        scrollWheelZoom={false}\r\n        casesType={casesType}\r\n      >\r\n        <ChangeView center={center} zoom={zoom} />\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {showDataOnMap(countriesData, casesType)}\r\n      </MapContainer>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./table.css\";\r\nimport numeral from \"numeral\";\r\n\r\nexport const Table = ({ countries }) => {\r\n  return (\r\n    <div className=\"table\">\r\n      {countries.map(({ country, cases }) => {\r\n        return (\r\n          <tr>\r\n            <td>{country}</td>\r\n            <td>\r\n              <strong>{numeral(cases).format(\"000,000\")}</strong>\r\n            </td>\r\n          </tr>\r\n        );\r\n      })}\r\n      <h3>World</h3>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport numeral from \"numeral\";\r\n\r\nconst options = {\r\n  legend: {\r\n    display: true,\r\n  },\r\n  elements: {\r\n    point: {\r\n      radius: 0,\r\n    },\r\n  },\r\n  maintainAspectRatio: false,\r\n  tooltips: {\r\n    mode: \"index\",\r\n    intersect: false,\r\n    callbacks: {\r\n      label: function (tooltipItem, data) {\r\n        return numeral(tooltipItem.value).format(\"+0,0\");\r\n      },\r\n    },\r\n  },\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        time: {\r\n          format: \"MM/DD/YY\",\r\n          tooltipFormat: \"ll\",\r\n        },\r\n      },\r\n    ],\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          display: false,\r\n        },\r\n        ticks: {\r\n          // Include a dollar sign in the ticks\r\n          callback: function (value, index, values) {\r\n            return numeral(value).format(\"0a\");\r\n          },\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst buildChartData = (data, casesType) => {\r\n  const chartData = [];\r\n  let lastData;\r\n\r\n  for (let date in data.cases) {\r\n    if (lastData) {\r\n      let newDataPoint = {\r\n        x: date,\r\n        y: data[casesType][date] - lastData,\r\n      };\r\n      chartData.push(newDataPoint);\r\n    }\r\n    lastData = data[casesType][date];\r\n  }\r\n  return chartData;\r\n};\r\n\r\nexport const LineGraph = ({ casesType }) => {\r\n  const [data, setData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = () => {\r\n      axios\r\n        .get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\r\n        .then((res) => {\r\n          console.log(\"apple\", res.data);\r\n          let chartData = buildChartData(res.data, casesType);\r\n          setData(chartData);\r\n        });\r\n    };\r\n    fetchData();\r\n  }, [casesType]);\r\n\r\n  return (\r\n    <div>\r\n      {data?.length && (\r\n        <Line\r\n          data={{\r\n            datasets: [\r\n              {\r\n                label: `${casesType.toUpperCase()} in the last 120 days`,\r\n                fill: false,\r\n                lineTension: 0.1,\r\n                backgroundColor: \"rgba(75,192,192,0.4)\",\r\n                borderColor: \"rgba(75,192,192,1)\",\r\n                borderCapStyle: \"butt\",\r\n                borderDash: [],\r\n                borderDashOffset: 0.0,\r\n                borderJoinStyle: \"miter\",\r\n                pointBorderColor: \"rgba(75,192,192,1)\",\r\n                pointBackgroundColor: \"#fff\",\r\n                pointBorderWidth: 1,\r\n                pointHoverRadius: 5,\r\n                pointHoverBackgroundColor: \"rgba(75,192,192,1)\",\r\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\r\n                pointHoverBorderWidth: 2,\r\n                pointRadius: 1,\r\n                pointHitRadius: 10,\r\n                data: data,\r\n              },\r\n            ],\r\n          }}\r\n          options={options}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, Fragment } from \"react\";\r\nimport \"./App.css\";\r\n\r\nimport axios from \"axios\";\r\nimport { sortData, formatStat } from \"./util\";\r\nimport { InfoBox } from \"./components/infoBox\";\r\nimport { Map } from \"./components/map\";\r\nimport { Table } from \"./components/table\";\r\nimport { LineGraph } from \"./components/lineGraph\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Card, CardContent } from \"@material-ui/core\";\r\nimport \"leaflet/dist/leaflet.css\";\r\n\r\nexport const App = () => {\r\n  const [countries, setCountries] = useState([\"USA\", \"UK\", \"INDIA\"]);\r\n  const [country, setCountry] = useState(\"WorldWide\");\r\n  const [countryInfo, setCountryInfo] = useState({});\r\n  const [tableData, setTableData] = useState([]);\r\n  const [mapCenter, setMapCenter] = useState([34.80746, -40.4796]);\r\n  const [mapZoom, setMapZoom] = useState(3);\r\n  const [mapCountriesData, setMapCountriesData] = useState([]);\r\n  const [casesType, setCasesType] = useState(\"cases\");\r\n\r\n  useEffect(() => {\r\n    const getCountriesData = () => {\r\n      axios.get(\"https://disease.sh/v3/covid-19/countries\").then((res) => {\r\n        const countries = res.data.map((country) => {\r\n          console.log(\"......\", res.data);\r\n          return {\r\n            name: country.country,\r\n            value: country.countryInfo.iso3,\r\n          };\r\n        });\r\n        setTableData(sortData(res.data));\r\n        setCountries(countries);\r\n        setMapCountriesData(res.data);\r\n        console.log(countries);\r\n      });\r\n    };\r\n    getCountriesData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    axios.get(\"https://disease.sh/v3/covid-19/all\").then((res) => {\r\n      setCountryInfo(res.data);\r\n    });\r\n  }, []);\r\n\r\n  const onCountryChange = (e) => {\r\n    const selectedCountry = e.target.value;\r\n    const url =\r\n      selectedCountry === \"WorldWide\"\r\n        ? \"https://disease.sh/v3/covid-19/all\"\r\n        : `https://disease.sh/v3/covid-19/countries/${selectedCountry}`;\r\n\r\n    axios.get(url).then((res) => {\r\n      console.log(\"apple\", res.data, res.data);\r\n      setCountryInfo(res.data);\r\n      setCountry(selectedCountry);\r\n      setMapCenter([res.data.countryInfo.lat, res.data.countryInfo.long]);\r\n      setMapZoom(4);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"app__container\">\r\n        <div className=\"left\">\r\n          <div className=\"app__header\">\r\n            <h1>COVID TRACKER</h1>\r\n            <FormControl className=\"app__dropdown\">\r\n              <Select\r\n                variant=\"outlined\"\r\n                value={country}\r\n                onChange={onCountryChange}\r\n              >\r\n                <MenuItem value=\"WorldWide\">WorldWide</MenuItem>\r\n                {countries.map((country) => {\r\n                  return (\r\n                    <MenuItem value={country.value}>{country.name}</MenuItem>\r\n                  );\r\n                })}\r\n              </Select>\r\n            </FormControl>\r\n          </div>\r\n          <div className=\"app__Stats\">\r\n            <InfoBox\r\n              isRed\r\n              active={casesType === \"cases\"}\r\n              onClick={() => setCasesType(\"cases\")}\r\n              title=\"Cases\"\r\n              cases={formatStat(countryInfo.todayCases)}\r\n              total={countryInfo.cases}\r\n            />\r\n            <InfoBox\r\n              active={casesType === \"recovered\"}\r\n              onClick={() => setCasesType(\"recovered\")}\r\n              title=\"Recover\"\r\n              cases={formatStat(countryInfo.todayRecovered)}\r\n              total={countryInfo.recovered}\r\n            />\r\n            <InfoBox\r\n              isRed\r\n              active={casesType === \"deaths\"}\r\n              onClick={() => setCasesType(\"deaths\")}\r\n              title=\"Deaths\"\r\n              cases={formatStat(countryInfo.todayDeaths)}\r\n              total={countryInfo.deaths}\r\n            />\r\n          </div>\r\n          <Map\r\n            center={mapCenter}\r\n            zoom={mapZoom}\r\n            countriesData={mapCountriesData}\r\n            casesType={casesType}\r\n          />\r\n        </div>\r\n\r\n        <Card className=\"right\">\r\n          <CardContent>\r\n            <h1>Live Cases by Country</h1>\r\n            <Table countries={tableData} />\r\n            <h3>World Cases of {casesType}</h3>\r\n            <LineGraph casesType={casesType} />\r\n          </CardContent>\r\n        </Card>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport \"./index.css\";\r\n\r\nimport { App } from \"./App\";\r\n\r\nReactDom.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}